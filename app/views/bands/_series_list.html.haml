.jqAccordion
  -band.live_stream_series.each do |series|
    %div{ :class => (series.streamapi_streams.count > 0) ? 'dark_bar accordion_header' : 'dark_bar' }
      -#.dark_bar.accordion_header
      .twothirds_info
        .expand_series{ :title => "Expand series (#{ series.streamapi_streams.count } more)" }
          -if series.streamapi_streams.count > 0
            +
          -else
            &nbsp;
        .placement_streamname
          = link_to series.title, nil, :class => 'link_streamname'
        -# __commented__
          .placement_starttime
            = series.starts_at.strftime("%m.%d.%Y")
            %span.dark_accent
              = '|'
            = series.starts_at.strftime("%I:%M%p")
            %span.dark_accent ET
          .placement_endtime
            = series.ends_at.strftime("%m.%d.%Y")
            %span.dark_accent
              = '|'
            = series.ends_at.strftime("%I:%M%p")
            %span.dark_accent ET
    .stream_list
      -series.streamapi_streams.order('streamapi_streams.starts_at ASC').each do |stream|
        -if stream.public || can_broadcast
          .stream_entry
            %span.stream_manage_buttons
              %span.stream_edit
                -if can_broadcast
                  = link_to 'edit', { :controller => 'streamapi_streams', :action => 'edit', :id => stream.id }
                -else
                  &nbsp;
            %span.stream_name
              - viewerTheme = StreamapiStreamTheme.find(stream.viewer_theme_id)
              -if can_broadcast
                - hover_title = (stream.public) ? 'Review stream' : 'Stream is not public, but you can still see it.'
                - title_class = (stream.public) ? 'stream-title' : 'stream-title not-public'
                = link_to stream.title, stream, :class => title_class, :title => hover_title
              -else
                = link_to stream.title, { :controller => 'streamapi_streams', :action => 'view', :id => stream.id, :lightbox => true }, :class => 'lightbox stream-title', :fbheight => 480, :fbwidth => 880
            %span.stream_broadcast_link
              -if can_broadcast
                = link_to ' ', { :controller => 'streamapi_streams', :action => 'broadcast', :id => stream.id, :lightbox => true }, :class => 'lightbox broadcast', :title => 'Broadcast'
              -else
                &nbsp;
            .placement_starttime
              = stream.starts_at.strftime("%b %d, %Y")
              %span.dark_accent
                = '|'
              = stream.starts_at.strftime('%I:%M%p')
              %span.dark_accent ET

